cmake_minimum_required(VERSION 2.8)
set(INSTALL_PREFIX /usr)
project(whisper-core)

execute_process(COMMAND git submodule init)
execute_process(COMMAND git submodule update)
execute_process(COMMAND cmake . WORKING_DIRECTORY jnxlibc)
execute_process(COMMAND make . WORKING_DIRECTORY jnxlibc)
execute_process(COMMAND sudo make install . WORKING_DIRECTORY jnxlibc)

add_subdirectory(src/crypto)
add_subdirectory(src/data)
add_subdirectory(src/err)
add_subdirectory(src/integrity)
add_subdirectory(src/net)
add_subdirectory(src/session)
add_subdirectory(src/util)

include_directories(${PROJECT_INC_DIR}src/crypto)
include_directories(${PROJECT_INC_DIR}src/data)
include_directories(${PROJECT_INC_DIR}src/err)
include_directories(${PROJECT_INC_DIR}src/integrity)
include_directories(${PROJECT_INC_DIR}src/net)
include_directories(${PROJECT_INC_DIR}src/session)
include_directories(${PROJECT_INC_DIR}src/util)

if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  set (CMAKE_C_FLAGS "-Wno-deprecated-declarations -Wno-pointer-sign -Wno-switch -Wno-implicit-function-declaration")
endif()

execute_process(COMMAND ./tools/generate_protobuf)
file(COPY ${HEADERS} DESTINATION whisper-core)

add_library(whisper-core-static STATIC ${SOURCE})
add_library(whisper-core SHARED ${SOURCE})
target_link_libraries(whisper-core -ljnxc -lcrypto -lssl -g -lprotobuf-c  -lpthread ${LINKER_LIBRARIES})
target_link_libraries(whisper-core-static -ljnxc -lcrypto -lssl -g -lprotobuf-c  -lpthread ${LINKER_LIBRARIES})
install(TARGETS whisper-core-static DESTINATION ${INSTALL_PREFIX}/lib)
install(TARGETS whisper-core DESTINATION ${INSTALL_PREFIX}/lib)
install(DIRECTORY whisper-core DESTINATION ${INSTALL_PREFIX}/include)
